@model Models.User

@{
    var cordinates = Model.Profile.LocationCordinates;
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<div>
    <form class="form-horizontal" enctype="multipart/form-data" method="POST" action="/Freelancer/Edit">
        <h3 class="text-center">Profile</h3>
        <hr />
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Profile.ProfileId)
        @Html.HiddenFor(model => model.Profile.LocationCordinates,new { @class = "form-control"})
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-md-3">
                <div class="form-group">
                    <label class="control-label col-sm-2" for="email">Name:</label>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.UserName,new { @class = "form-control"})
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-2" for="email">Phone:</label>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.PhoneNumber,new { @class = "form-control"})
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-2" for="email">Email:</label>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.Email,new { @class = "form-control"})
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-2" for="email">Designation:</label>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.Profile.Designation,new { @class = "form-control"})
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-2" for="email">Location:</label>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.Location,new { @class = "form-control"})
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-sm-2" for="email">Experience:</label>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.Profile.Experience,new { @class = "form-control"})
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label col-sm-2" for="email">HourlyRate:</label>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.Profile.HourlyRate,new { @class = "form-control"})
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-2" for="email">Skills:</label>
                    <div class="col-sm-10">
                        @Html.TextBoxFor(model => model.Profile.Skills,new { @class = "form-control"})
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-2" for="email">Description:</label>
                    <div class="col-sm-10">
                        @Html.TextAreaFor(model => model.Profile.Description,new { @class = "form-control",rows=6})
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-10">
                        @Html.CheckBoxFor(model => model.Profile.ReceiveJobNotifications)
                        Receive job notifications
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-2" for="">Image</label>
                    <div class="col-sm-10">
                        <img id="imgPreview" src="data:image/png;base64,@Model.ProfileImage" alt="profile img" class="" width="150">

                        <input type="file" name="fileUpload" id="fileUpload" />
                    </div>

                </div>
            </div>
            <div class="col-md-3">

                <input id="search-input" class="form-control" type="text" placeholder="Enter a location">
                <br /><div id="map"></div>
                <br />
                <input type="submit" value="Save" class="btn btn-success col-md-4" />

            </div>
            <div class="col-md-1"></div>

        </div>

    </form>
</div>
<script>

    $(document).ready(function () {
        $('#fileUpload').change(function () {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#imgPreview').attr('src', e.target.result);
                $('#imgPreview').show();
            };
            reader.readAsDataURL(this.files[0]);
        });
    });

    var map, marker;
    var coordinatesString = '@cordinates';
    var latitude = 53.383331
    var longitude = -1.466667
    if (coordinatesString != '') {
        var coordinatesArray = coordinatesString.split(',');
        latitude = parseFloat(coordinatesArray[0]);
        longitude = parseFloat(coordinatesArray[1]);
    }

    function initMap() {

        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: latitude, lng: longitude },
            zoom: 12
        });
        if (coordinatesString != '') {
            marker = new google.maps.Marker({
                map: map,
                position: { lat: latitude, lng: longitude }
            });
        }

        var input = document.getElementById('search-input');
        var autocomplete = new google.maps.places.Autocomplete(input);

        // Bind the search box to the map
        autocomplete.bindTo('bounds', map);

        autocomplete.addListener('place_changed', function () {
            var place = autocomplete.getPlace();
            if (place.geometry) {
                map.setCenter(place.geometry.location);
                map.setZoom(13);
            } else {
                console.log("Location not found");
            }

            if (marker) {
                marker.setMap(null);
            }

            // Create a new marker
            marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location
            });

            // Set the map center and zoom level
            var position = marker.getPosition();
            var latLngString = position.lat() + ',' + position.lng();
            $("#Profile_LocationCordinates").val(latLngString)
        });
    }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=yourkeyhere&callback=initMap&libraries=places"></script>

